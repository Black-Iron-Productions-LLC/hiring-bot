// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  BUILDER
  PROGRAMMER
  ANIMATOR
  UI_ARTIST
  ICON_ARTIST
  VFX_ARTIST
}

model DeveloperReferral {
  id Int @id @default(autoincrement())

  referrerDiscordID String

  discordID  String? @unique
  twitterURL String  @unique
  email      String  @unique

  firstName String
  lastName  String

  experience      String
  specialization  String
  additionalNotes String

  roles Role[]

  evaluations Evaluation[]

  @@unique([firstName, lastName])
  @@map("DeveloperRef")
}

model EvaluationRoleInfo {
  id Int @id @default(autoincrement())

  evaluatorId Int
  evaluator   Evaluator @relation(fields: [evaluatorId], references: [id])

  maximumRole EvaluatorRole?
  wantToInterview Boolean

  role Role

  queueMax Int

  @@unique([role, evaluatorId])
}

enum EvaluatorRole {
  APPLICATION_MANAGER
  HIRING_MANAGER
}

model EvaluatorOnEvaluation {
  evaluatorRole EvaluatorRole

  rating Int?
  notes  String?

  managerId Int
  manager   Evaluator @relation(fields: [managerId], references: [id])

  evaluationId Int
  evaluation   Evaluation @relation(fields: [evaluationId], references: [id])

  @@id([managerId, evaluationId])
}

model Evaluation {
  id Int @id @default(autoincrement())

  role Role

  developer   DeveloperReferral @relation(fields: [developerId], references: [id])
  developerId Int

  evaluators EvaluatorOnEvaluation[]

  @@unique([developerId, role])
}

model Evaluator {
  id Int @id @default(autoincrement())

  discordID String @unique

  rolePreferences EvaluationRoleInfo[]

  currentEvaluations EvaluatorOnEvaluation[]
}
